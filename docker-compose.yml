version: '3.8'

services:
  # MongoDB
  mongodb:
    image: mongo:6.0
    container_name: inoxdev-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD:-password123}
      MONGO_INITDB_DATABASE: ${MONGO_DATABASE:-inoxdev}
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./scripts/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - inoxdev-network

  # Redis (for caching and sessions)
  redis:
    image: redis:7-alpine
    container_name: inoxdev-redis
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD:-redis123}
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - inoxdev-network

  # Backend API
  backend:
    image: mayank8765/inoxdev:latest
    container_name: inoxdev-backend
    restart: unless-stopped
    environment:
      NODE_ENV: ${NODE_ENV:-production}
      PORT: ${PORT:-5000}
      MONGODB_URI: mongodb://${MONGO_ROOT_USERNAME:-admin}:${MONGO_ROOT_PASSWORD:-password123}@mongodb:27017/${MONGO_DATABASE:-inoxdev}?authSource=admin
      REDIS_URL: redis://:${REDIS_PASSWORD:-redis123}@redis:6379
      JWT_SECRET: ${JWT_SECRET}
      JWT_REFRESH_SECRET: ${JWT_REFRESH_SECRET}
      EMAIL_USER: ${EMAIL_USER}
      EMAIL_PASS: ${EMAIL_PASS}
      GEMINI_API_KEY: ${GEMINI_API_KEY}
      ADMIN_EMAIL: ${ADMIN_EMAIL:-hello@inoxdev.com}
    ports:
      - "${PORT:-5000}:5000"
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
    depends_on:
      - mongodb
      - redis
    networks:
      - inoxdev-network

  # Nginx reverse proxy
  nginx:
    image: nginx:alpine
    container_name: inoxdev-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./public:/var/www/html:ro
    depends_on:
      - backend
    networks:
      - inoxdev-network

volumes:
  mongodb_data:
  redis_data:

networks:
  inoxdev-network:
    driver: bridge
